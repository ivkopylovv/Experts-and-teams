user.query.find.by.id = SELECT * FROM users WHERE id = ?
user.query.find.by.username = SELECT * FROM users WHERE username = ?
user.query.find.all.without.current.user = SELECT * FROM users WHERE id <> ?
user.query.save.user = INSERT INTO users (name, username, password, role) \
   VALUES (?, ?, ?, ?)
user.query.update = UPDATE users SET \
  name = ?, username = ?, password = ? \
  WHERE id = ?
user.query.update.blocked = UPDATE users SET is_blocked = ? WHERE id = ?
user.query.delete = DELETE FROM USERS u WHERE u.ID = ?
user.query.find.all.without.admin = SELECT * FROM users WHERE role <> 'Admin' AND id <> ?
user.query.find.available.experts = SELECT u.* \
  FROM users u \
  INNER JOIN expert_details ed ON ed.user_id = u.id \
  WHERE u.role = 'Expert' AND u.is_blocked = 0 \
  AND ed.current_teams_count <> ed.max_teams_count \
  AND u.id NOT IN ( \
                SELECT te.expert_id \
                FROM teams_experts te \
                WHERE te.team_id = ?)
user.query.find.team.experts = SELECT u.id, u.name, u.username, u.password, u.role, te.is_blocked AS is_blocked \
  FROM users u \
  INNER JOIN teams_experts te ON u.id = te.expert_id \
  WHERE te.team_id = 2 AND u.is_blocked = 0
session.query.find.by.user.id = SELECT * FROM sessions s \
  INNER JOIN users u ON u.id = s.user_id \
  WHERE s.user_id = ?
session.query.save = INSERT INTO sessions (user_id, expired_at) VALUES (?, ?)
session.query.delete = DELETE FROM sessions WHERE user_id = ?
session.query.find.all.with.session = SELECT u.*,  u.id as user_id, s.expired_at FROM users u \
    LEFT JOIN sessions s ON u.id = s.user_id \
    WHERE u.id <> ?

expert.skill.query.save = INSERT INTO experts_skills (user_id, skill) VALUES (?, ?)
expert.skill.query.find.by.expert.id = SELECT * \
  FROM experts_skills \
  WHERE user_id = ?
expert.detail.query.save = INSERT INTO expert_details (user_id, max_teams_count) VALUES (?, 4)
expert.detail.query.increment.teams.count = UPDATE expert_details \
  SET current_teams_count = current_teams_count + 1 \
  WHERE user_id = ?
expert.detail.query.decrement.teams.count = UPDATE expert_details \
  SET current_teams_count = current_teams_count - 1 \
  WHERE user_id = ?

team.query.find.by.user.id = SELECT t.* \
  FROM teams t \
  INNER JOIN teams_members m ON t.id = m.team_id \
  WHERE m.user_id = ?
team.query.find.by.expert.id = SELECT t.* \
  FROM teams t \
  INNER JOIN teams_experts te ON t.id = te.team_id \
  WHERE te.expert_id = ? AND te.is_blocked = 0
team.query.find.by,id = SELECT * FROM teams WHERE id = ?
team.query.save = INSERT INTO teams (name, captain_id) VALUES (?, ?)
team.query.add.team.member = INSERT INTO teams_members (team_id, user_id) VALUES (?, ?)
team.query.add.expert = INSERT INTO teams_experts (team_id, expert_id) VALUES (?, ?)
team.query.delete.by.id = DELETE FROM teams WHERE id = ?
team.query.delete.team.member = DELETE FROM teams_members WHERE team_id = ? AND user_id = ?
team.query.find.available.teams = SELECT t.* \
  FROM teams t \
  INNER JOIN teams_members tm ON tm.team_id = t.id \
  WHERE t.id NOT IN (\
        SELECT tm1.team_id \
        FROM teams_members tm1 \
        WHERE tm1.user_id = ?) AND t.id NOT IN (\
                                        SELECT tjr.team_id \
                                        FROM team_join_requests tjr \
                                        WHERE tjr.user_id = ?)
team.query.increment.members.count = UPDATE teams \
  SET members_count = members_count + 1 \
  WHERE id = ?
team.query.decrement.members.count = UPDATE teams \
  SET members_count = members_count - 1 \
  WHERE id = ?
team.query.delete.expert = DELETE \
  FROM teams_experts \
  WHERE team_id = ? AND expert_id = ?
team.query.update.expert.block.status = UPDATE teams_experts \
  SET is_blocked = ? \
  WHERE expert_id = ? AND team_id = ?
team.join.request.query.find.by.id = SELECT * FROM team_join_requests WHERE id = ?
team.join.request.query.save = INSERT INTO team_join_requests (user_id, team_id, message) VALUES (?, ?, ?)
team.join.request.query.find.by.captain.id = SELECT tjr.*, u.name \
  FROM team_join_requests tjr \
  INNER JOIN teams t ON tjr.team_id = t.id \
  INNER JOIN users u ON tjr.user_id = u.id \
  WHERE t.captain_id = ?
team.join.request.query.delete.by.id = DELETE \
  FROM team_join_requests \
  WHERE id = ?

team.message.query.save = INSERT INTO team_messages (team_id, user_id, message, message_date, expert_id) \
  VALUES (?, ?, ?, ?, ?);
team.message.query.find.by.team.id = SELECT tm.*, t.name as team_name, u.name as user_name, ex.name as expert_name \
  FROM team_messages tm \
  INNER JOIN teams t ON tm.team_id = t.id \
  INNER JOIN users u ON tm.user_id = u.id \
  LEFT JOIN users ex ON tm.expert_id = ex.id \
  WHERE team_id = ?
team.message.query.find.actual.by.team.id.user.id = SELECT tm.*, t.name as team_name, u.name as user_name, ex.name as expert_name \
  FROM team_messages tm \
  INNER JOIN teams t ON tm.team_id = t.id \
  INNER JOIN users u ON tm.user_id = u.id \
  LEFT JOIN users ex ON tm.expert_id = ex.id \
  WHERE team_id = ? AND message_date > (SELECT request_date \
                                        FROM last_message_requests \
                                        WHERE team_id = ? AND user_id = ?)
last.message.request.query.upsert = DECLARE \
  any_rows_found NUMBER; \
  BEGIN \
    SELECT COUNT(*) \
    INTO any_rows_found \
    FROM last_message_requests \
    WHERE ROWNUM = 1 AND team_id = ? AND user_id = ?; \
    IF any_rows_found = 1 THEN \
        UPDATE last_message_requests \
        SET request_date = ? \
        WHERE team_id = ? AND user_id = ?; \
    ELSE \
        INSERT INTO last_message_requests (team_id, user_id, request_date) VALUES (?, ?, ?); \
    END IF;\
  END
last.message.find.by.team.id.and.user.id = SELECT * \
  FROM last_message_requests \
  WHERE team_id = ? AND user_id = ?